{"ast":null,"code":"var _jsxFileName = \"/Users/itexecutive/Documents/Workspace/react-clock-file/react clock/src/components/analogue-clock/analogue-clock.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport './analogue-clock.style.css';\nimport moment from 'moment';\n\nfunction AnalogueClock(props) {\n  const {\n    timezone\n  } = props;\n  let date = new Date(new Date().toLocaleString(\"en-US\", {\n    timeZone: timezone\n  }));\n  const [hours, setHours] = useState((date.getHours() + 11) % 12 + 1);\n  const [minutes, setMinutes] = useState(date.getMinutes());\n  const [seconds, setSeconds] = useState(date.getSeconds());\n  useEffect(() => {\n    let interval = null;\n    interval = setInterval(() => {\n      date = new Date(new Date().toLocaleString(\"en-US\", {\n        timeZone: timezone\n      }));\n      setHours((date.getHours() + 11) % 12 + 1);\n      setMinutes(date.getMinutes());\n      setSeconds(date.getSeconds());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [minutes, hours, seconds]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analogue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"hour\",\n    style: {\n      transform: `rotate(${hours * 30}deg)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"minute\",\n    style: {\n      transform: `rotate(${minutes * 6}deg)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"second\",\n    style: {\n      transform: `rotate(${seconds * 6}deg)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, moment(date).format(\"h:mm:ss a\")));\n}\n\nexport default AnalogueClock;","map":{"version":3,"sources":["/Users/itexecutive/Documents/Workspace/react-clock-file/react clock/src/components/analogue-clock/analogue-clock.component.jsx"],"names":["React","useState","useEffect","moment","AnalogueClock","props","timezone","date","Date","toLocaleString","timeZone","hours","setHours","getHours","minutes","setMinutes","getMinutes","seconds","setSeconds","getSeconds","interval","setInterval","clearInterval","transform","format"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAO,4BAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEC,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAAaD,KAAnB;AACC,MAAIE,IAAI,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,cAAX,CAA0B,OAA1B,EAAmC;AAACC,IAAAA,QAAQ,EAAEJ;AAAX,GAAnC,CAAT,CAAX;AACD,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBX,QAAQ,CAAC,CAACM,IAAI,CAACM,QAAL,KAAkB,EAAnB,IAAyB,EAAzB,GAA8B,CAA/B,CAAjC;AACA,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBd,QAAQ,CAACM,IAAI,CAACS,UAAL,EAAD,CAArC;AACA,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBjB,QAAQ,CAACM,IAAI,CAACY,UAAL,EAAD,CAArC;AAICjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkB,QAAQ,GAAG,IAAf;AACAA,IAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACzBd,MAAAA,IAAI,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,cAAX,CAA0B,OAA1B,EAAmC;AAACC,QAAAA,QAAQ,EAAEJ;AAAX,OAAnC,CAAT,CAAP;AACAM,MAAAA,QAAQ,CAAE,CAACL,IAAI,CAACM,QAAL,KAAkB,EAAnB,IAAyB,EAAzB,GAA8B,CAAhC,CAAR;AACAE,MAAAA,UAAU,CAAER,IAAI,CAACS,UAAL,EAAF,CAAV;AACAE,MAAAA,UAAU,CAACX,IAAI,CAACY,UAAL,EAAD,CAAV;AACH,KALqB,EAKnB,IALmB,CAAtB;AAOA,WAAO,MAAMG,aAAa,CAACF,QAAD,CAA1B;AAEH,GAXQ,EAWN,CAACN,OAAD,EAASH,KAAT,EAAgBM,OAAhB,CAXM,CAAT;AAeD,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,KAAK,EAAE;AAACM,MAAAA,SAAS,EAAG,UAASZ,KAAK,GAAG,EAAG;AAAjC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACY,MAAAA,SAAS,EAAG,UAAST,OAAO,GAAG,CAAE;AAAlC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACS,MAAAA,SAAS,EAAG,UAASN,OAAO,GAAG,CAAE;AAAlC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAId,MAAM,CAACI,IAAD,CAAN,CAAaiB,MAAb,CAAoB,WAApB,CAAJ,CATJ,CADJ;AAaH;;AAED,eAAepB,aAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport './analogue-clock.style.css';\r\nimport moment from 'moment';\r\n\r\n function AnalogueClock(props){\r\n    const {timezone} = props;\r\n     let date = new Date(new Date().toLocaleString(\"en-US\", {timeZone: timezone}));\r\n    const [hours,setHours] = useState((date.getHours() + 11) % 12 + 1);\r\n    const [minutes,setMinutes] = useState(date.getMinutes());\r\n    const [seconds,setSeconds] = useState(date.getSeconds());\r\n\r\n\r\n\r\n     useEffect(() => {\r\n         let interval = null;\r\n         interval = setInterval(() => {\r\n             date = new Date(new Date().toLocaleString(\"en-US\", {timeZone: timezone}));\r\n             setHours(((date.getHours() + 11) % 12 + 1));\r\n             setMinutes( date.getMinutes());\r\n             setSeconds(date.getSeconds());\r\n         }, 1000);\r\n\r\n         return () => clearInterval(interval);\r\n\r\n     }, [minutes,hours, seconds]);\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"analogue\">\r\n            <div className=\"clock\">\r\n                <div className=\"wrap\">\r\n                    <span className=\"hour\" style={{transform: `rotate(${hours * 30}deg)`}}></span>\r\n                    <span className=\"minute\" style={{transform: `rotate(${minutes * 6}deg)`}}></span>\r\n                    <span className=\"second\" style={{transform: `rotate(${seconds * 6}deg)`}}></span>\r\n                    <span className=\"dot\"></span>\r\n                </div>\r\n            </div>\r\n            <p>{moment(date).format(\"h:mm:ss a\")}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnalogueClock;\r\n"]},"metadata":{},"sourceType":"module"}